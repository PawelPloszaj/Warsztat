@page "/add-repairorder"
@using WebApp.Shared.Dto
@using WebApp.Client.Services
@inject RepairOrderService RepairOrderService
@inject VehicleService VehicleService
@inject NavigationManager Navigation

<h3>Add Repair Order</h3>

@if (errorMessage != null)
{
    <p style="color: red">@errorMessage</p>
}

<div>
    <label>Start Date:</label>
    <input type="datetime" @bind="repairOrder.StartDate" />
</div>
<div>
    <label>Status:</label>
    <input @bind="repairOrder.Status" />
</div>
<div>
    <label>Vehicle:</label>
    <select @bind="repairOrder.VehicleId">
        <option value="0">-- Select Vehicle --</option>
        @foreach (var vehicle in vehicles)
        {
            <option value="@vehicle.Id">@vehicle.Brand @vehicle.Model - @vehicle.LicensePlate</option>
        }
    </select>
</div>

<button @onclick="SaveRepairOrder">Save</button>
<button @onclick="@(() => Navigation.NavigateTo("/repairorders"))">Cancel</button>

@code {
    private RepairOrderDto repairOrder = new() { StartDate = DateTime.UtcNow };
    private List<VehicleDto> vehicles = new();
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            vehicles = await VehicleService.GetVehiclesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading vehicles: {ex.Message}";
        }
    }

    private async Task SaveRepairOrder()
    {
        errorMessage = null;

        if (string.IsNullOrWhiteSpace(repairOrder.Status))
        {
            errorMessage = "Status is required.";
            return;
        }

        if (repairOrder.VehicleId == 0)
        {
            errorMessage = "Please select a vehicle.";
            return;
        }

        try
        {
            await RepairOrderService.AddRepairOrderAsync(repairOrder);
            Navigation.NavigateTo("/repairorders");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error adding repair order: {ex.Message}";
        }
    }
}
