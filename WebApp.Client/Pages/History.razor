@page "/history/{vehicleId:int}"
@using WebApp.Client.Services
@using WebApp.Shared.Dto
@inject HistoryService HistoryService
@inject NavigationManager Navigation

<h3>Repair History</h3>

@if (repairs == null)
{
    <p>Loading...</p>
}
else if (repairs.Count == 0)
{
    <p>No repair history available for this vehicle.</p>
}
else
{
    <table class="styled-table">
        <thead>
            <tr>
                <th>Repair Date</th>
                <th>Description</th>
                <th>Cost</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var repair in repairs)
            {
                <tr>
                    <td>@repair.RepairDate.ToShortDateString()</td>
                    <td>@repair.Description</td>
                    <td>$@repair.Cost</td>
                    <td>
                        <button @onclick="() => ViewDetails(repair.Id)">View Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="@(() => Navigation.NavigateTo("/vehicles"))">Back to Vehicles</button>

@code {
    [Parameter] public int? VehicleId { get; set; }
    private List<RepairDto>? repairs;

    protected override async Task OnInitializedAsync()
    {
        if (VehicleId == null)
        {
            Navigation.NavigateTo("/vehicles");
            return;
        }

        try
        {
            repairs = await HistoryService.GetRepairHistoryAsync(VehicleId.Value);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading repair history: {ex.Message}");
            Navigation.NavigateTo("/vehicles");
        }
    }

    private void ViewDetails(int repairId)
    {
        Navigation.NavigateTo($"/repair-details/{repairId}");
    }
}
