@page "/history/{vehicleId:int}"
@using WebApp.Client.Services
@using WebApp.Shared.Dto
@inject HistoryService HistoryService
@inject NavigationManager Navigation

<h3>Repair History</h3>

@if (repairs == null)
{
    <p>Loading...</p>
}
else if (repairs.Count == 0)
{
    <p>No repair history available for this vehicle.</p>
}
else
{
    <ul>
        @foreach (var repair in repairs)
        {
            <li>@repair.RepairDate.ToShortDateString() - @repair.Description - $@repair.Cost</li>
        }
    </ul>
}

<button @onclick="@(() => Navigation.NavigateTo("/vehicles"))">Back to Vehicles</button>

@code {
    [Parameter] public int? VehicleId { get; set; }
    private List<RepairDto>? repairs = new();

    protected override async Task OnInitializedAsync()
    {
        if (VehicleId == null)
        {
            Navigation.NavigateTo("/vehicles");
            return;
        }

        try
        {
            repairs = await HistoryService.GetRepairHistoryAsync(VehicleId.Value);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading repair history: {ex.Message}");
            Navigation.NavigateTo("/vehicles");
        }
    }
}
