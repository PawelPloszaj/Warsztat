@page "/add-mechanic"
@using WebApp.Client.Services
@using WebApp.Shared.Dto
@inject MechanicService MechanicService
@inject NavigationManager Navigation

<h3>Add Mechanic</h3>

@if (errorMessage != null)
{
    <p style="color: red">@errorMessage</p>
}

<EditForm Model="@newMechanic" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <div>
        <label>First Name:</label>
        <InputText @bind-Value="newMechanic.FirstName" />
    </div>
    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="newMechanic.LastName" />
    </div>
    <button type="submit">Add</button>
    <button @onclick="@(() => Navigation.NavigateTo("/mechanics"))">Cancel</button>
</EditForm>

@code {
    private MechanicDto newMechanic = new();
    private string? errorMessage;

    private async Task HandleValidSubmit()
    {
        errorMessage = null;

        if (string.IsNullOrWhiteSpace(newMechanic.FirstName))
        {
            errorMessage = "First name is required.";
            return;
        }

        if (string.IsNullOrWhiteSpace(newMechanic.LastName))
        {
            errorMessage = "Last name is required.";
            return;
        }

        try
        {
            await MechanicService.AddMechanicAsync(newMechanic);
            Navigation.NavigateTo("/mechanics");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error adding mechanic: {ex.Message}";
        }
    }
}
