@page "/repairs"
@using WebApp.Shared.Dto
@using WebApp.Client.Services
@inject RepairService RepairService
@inject NavigationManager Navigation

<h3>Repairs</h3>

<div class="header-container">
    <button class="add-button" @onclick="@(() => Navigation.NavigateTo("/add-repair"))">+</button>
</div>

@if (repairs == null)
{
    <p>Loading...</p>
}
else if (repairs.Count == 0)
{
    <p>No repairs available.</p>
}
else
{
    <table class="styled-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Description</th>
                <th>Repair Date</th>
                <th>Cost</th>
                <th>Repair Order ID</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var repair in repairs)
            {
                <tr>
                    <td>@repair.Id</td>
                    <td>@repair.Description</td>
                    <td>@repair.RepairDate.ToShortDateString()</td>
                    <td>@repair.Cost PLN</td>
                    <td>@repair.RepairOrderId</td>
                    <td>
                        <button @onclick="() => EditRepair(repair.Id)">Edit</button>
                        <button class="delete-button" @onclick="@(() => DeleteRepair(repair.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<RepairDto>? repairs;

    protected override async Task OnInitializedAsync()
    {
        repairs = await RepairService.GetRepairsAsync();
    }

    private void EditRepair(int id)
    {
        Navigation.NavigateTo($"edit-repair/{id}");
    }

    private async Task DeleteRepair(int id)
    {
        try
        {
            await RepairService.DeleteRepairAsync(id);
            repairs = await RepairService.GetRepairsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting Repair: {ex.Message}");
        }
    }
}
