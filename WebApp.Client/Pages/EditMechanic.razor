@page "/edit-mechanic/{id:int}"
@using WebApp.Client.Services
@using WebApp.Shared.Dto
@inject MechanicService MechanicService
@inject NavigationManager Navigation

<h3>Edit Mechanic</h3>

@if (mechanic == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <label>First Name:</label>
        <input @bind="mechanic.FirstName" />
    </div>
    <div>
        <label>Last Name:</label>
        <input @bind="mechanic.LastName" />
    </div>
    <button @onclick="SaveMechanic">Save</button>
    <button @onclick="@(() => Navigation.NavigateTo("/mechanics"))">Cancel</button>
}

@code {
    [Parameter] public int? Id { get; set; }
    private MechanicDto? mechanic;

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Navigation.NavigateTo("/mechanics");
            return;
        }

        try
        {
            var mechanics = await MechanicService.GetMechanicsAsync();
            mechanic = mechanics.FirstOrDefault(m => m.Id == Id.Value);

            if (mechanic == null)
            {
                Navigation.NavigateTo("/mechanics");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading mechanic: {ex.Message}");
            Navigation.NavigateTo("/mechanics");
        }
    }

    private async Task SaveMechanic()
    {
        if (mechanic == null) return;

        try
        {
            await MechanicService.UpdateMechanicAsync(mechanic);
            Navigation.NavigateTo("/mechanics");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating mechanic: {ex.Message}");
        }
    }
}
