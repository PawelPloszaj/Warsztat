@page "/clients"
@using WebApp.Shared.Dto
@using WebApp.Client.Services
@inject ClientService ClientService
@inject NavigationManager Navigation

<h3>Clients</h3>

@if (clients == null)
{
    <p>Loading...</p>
}
else if (clients.Count == 0)
{
    <p>No clients available.</p>
}
else
{
    <ul>
        @foreach (var client in clients)
        {
            <li>
                @client.FirstName @client.LastName - @client.Phone
                <button @onclick="@(() => Navigation.NavigateTo($"/edit-client/{client.Id}"))">Edit</button>
                <button @onclick="() => DeleteClient(client.Id)">Delete</button>
            </li>
        }
    </ul>
}

@code {
    private List<ClientDto>? clients;

    protected override async Task OnInitializedAsync()
    {
        await LoadClients();
    }

    private async Task LoadClients()
    {
        try
        {
            clients = await ClientService.GetClientsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching clients: {ex.Message}");
        }
    }

    private async Task DeleteClient(int id)
    {
        try
        {
            await ClientService.DeleteClientAsync(id);
            await LoadClients();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting client: {ex.Message}");
        }
    }
}
