@page "/edit-vehicle/{id:int}"
@using WebApp.Shared.Dto
@using WebApp.Client.Services
@inject VehicleService VehicleService
@inject ClientService ClientService
@inject NavigationManager Navigation

<h3>Edit Vehicle</h3>

@if (vehicle == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <label>License Plate:</label>
        <input @bind="vehicle.LicensePlate" />
    </div>
    <div>
        <label>Brand:</label>
        <input @bind="vehicle.Brand" />
    </div>
    <div>
        <label>Model:</label>
        <input @bind="vehicle.Model" />
    </div>
    <div>
        <label>Year:</label>
        <input type="number" @bind="vehicle.Year" />
    </div>
    <div>
        <label>Client:</label>
        <select @bind="vehicle.ClientId">
            @foreach (var client in clients)
            {
                <option value="@client.Id">@client.FirstName @client.LastName</option>
            }
        </select>
    </div>
    <button @onclick="SaveVehicle">Save</button>
}

@code {
    [Parameter] public int? Id { get; set; }
    private VehicleDto? vehicle;
    private List<ClientDto> clients = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Navigation.NavigateTo("/vehicles");
            return;
        }

        try
        {
            var vehicles = await VehicleService.GetVehiclesAsync();
            vehicle = vehicles.FirstOrDefault(v => v.Id == Id.Value);

            if (vehicle == null)
            {
                Navigation.NavigateTo("/vehicles");
                return;
            }

            clients = await ClientService.GetClientsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading vehicle: {ex.Message}");
            Navigation.NavigateTo("/vehicles");
        }
    }

    private async Task SaveVehicle()
    {
        if (vehicle == null) return;

        try
        {
            await VehicleService.UpdateVehicleAsync(vehicle);
            Navigation.NavigateTo("/vehicles");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating vehicle: {ex.Message}");
        }
    }
}
